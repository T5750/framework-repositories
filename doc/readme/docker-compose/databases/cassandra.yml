version: '3'
services:
  cassandra1:
    restart: always
    image: cassandra:3
    container_name: cassandra1
    hostname: cassandra1
    healthcheck:
        test: ["CMD", "cqlsh", "-u", "cassandra", "-p", "cassandra", "-e", "describe keyspaces" ]
        interval: 5s
        timeout: 5s
        retries: 60
    ports:
      - 9041:9042  # Expose native binary CQL port for your apps
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./cassandra1:/var/lib/cassandra    # This is the volume that will persist data for cassandra1 node
      - ./etc/cassandra1:/etc/cassandra   # Use your own config files for full control
    environment: &environment    # Declare and save environments variables into "environment"
        #TZ: Asia/Shanghai
        CASSANDRA_SEEDS: "cassandra1,cassandra2"    # The first two nodes will be seeds
        CASSANDRA_CLUSTER_NAME: SolarSystem
        CASSANDRA_DC: Mars
        CASSANDRA_RACK: West
        CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
        CASSANDRA_NUM_TOKENS: 128
    networks:
      default:
        ipv4_address: 172.18.0.121
  cassandra2:
    restart: always
    image: cassandra:3
    container_name: cassandra2
    hostname: cassandra2
    healthcheck:
        test: ["CMD", "cqlsh", "-u", "cassandra", "-p", "cassandra", "-e", "describe keyspaces" ]
        interval: 5s
        timeout: 5s
        retries: 60
    ports:
      - 9042:9042  # Expose native binary CQL port for your apps
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./cassandra2:/var/lib/cassandra    # This is the volume that will persist data for cassandra2 node
      - ./etc/cassandra2:/etc/cassandra    # Use your own config files for full control
    environment: *environment    # point to "environment" to use the same environment variables as cassandra1
    depends_on:
      cassandra1:    # start cassandra2 only after cassandra1 is healthy
        condition: service_healthy
    networks:
      default:
        ipv4_address: 172.18.0.122
  cassandra3:
    restart: always
    image: cassandra:3
    container_name: cassandra3
    hostname: cassandra3
    healthcheck:
        test: ["CMD", "cqlsh", "-u", "cassandra", "-p", "cassandra", "-e", "describe keyspaces" ]
        interval: 5s
        timeout: 5s
        retries: 60
    ports:
      - 9043:9042  # Expose native binary CQL port for your apps
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./cassandra3:/var/lib/cassandra    # This is the volume that will persist data for cassandra3 node
      - ./etc/cassandra3:/etc/cassandra    # Use your own config files for full control
    environment: *environment    # point to "environment" to use the same environment variables as cassandra1
    depends_on:
      cassandra2:    # start cassandra3 only after cassandra1 is healthy
        condition: service_healthy
    networks:
      default:
        ipv4_address: 172.18.0.123
networks:
  default:
    external:
       name: bridge_compose