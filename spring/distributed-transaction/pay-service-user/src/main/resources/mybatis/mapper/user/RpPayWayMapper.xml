<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="t5750.pay.service.user.dao.impl.RpPayWayDaoImpl">
	<resultMap id="BaseResultMap" type="t5750.pay.service.user.entity.RpPayWay">
		<id column="ID" property="id" jdbcType="VARCHAR"/>
		<result column="version" property="version" jdbcType="BIGINT"/>
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
		<result column="edit_time" property="editTime" jdbcType="TIMESTAMP"/>
		<result column="pay_way_code" property="payWayCode" jdbcType="VARCHAR"/>
		<result column="pay_way_name" property="payWayName" jdbcType="VARCHAR"/>
		<result column="pay_type_code" property="payTypeCode" jdbcType="VARCHAR"/>
		<result column="pay_type_name" property="payTypeName" jdbcType="VARCHAR"/>
		<result column="pay_product_code" property="payProductCode" jdbcType="VARCHAR"/>
		<result column="status" property="status" jdbcType="VARCHAR"/>
		<result column="sorts" property="sorts" jdbcType="INTEGER"/>
		<result column="pay_rate" property="payRate" jdbcType="DOUBLE"/>
	</resultMap>
	<sql id="Base_Column_List">
    ID, version, create_time, edit_time, pay_way_code, pay_way_name, pay_type_code, 
    pay_type_name, pay_product_code, status, sorts, pay_rate
  </sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List"/>
		from rp_pay_way
		where ID = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from rp_pay_way
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
	<insert id="insert" parameterType="t5750.pay.service.user.entity.RpPayWay">
    insert into rp_pay_way (ID, version, create_time, 
      edit_time, pay_way_code, pay_way_name, 
      pay_type_code, pay_type_name, pay_product_code, 
      status, sorts, pay_rate
      )
    values (#{id,jdbcType=VARCHAR}, #{version,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{editTime,jdbcType=TIMESTAMP}, #{payWayCode,jdbcType=VARCHAR}, #{payWayName,jdbcType=VARCHAR}, 
      #{payTypeCode,jdbcType=VARCHAR}, #{payTypeName,jdbcType=VARCHAR}, #{payProductCode,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{sorts,jdbcType=INTEGER}, #{payRate,jdbcType=DOUBLE}
      )
  </insert>
	<insert id="insertSelective" parameterType="t5750.pay.service.user.entity.RpPayWay">
		insert into rp_pay_way
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="version != null">
				version,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="editTime != null">
				edit_time,
			</if>
			<if test="payWayCode != null">
				pay_way_code,
			</if>
			<if test="payWayName != null">
				pay_way_name,
			</if>
			<if test="payTypeCode != null">
				pay_type_code,
			</if>
			<if test="payTypeName != null">
				pay_type_name,
			</if>
			<if test="payProductCode != null">
				pay_product_code,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="sorts != null">
				sorts,
			</if>
			<if test="payRate != null">
				pay_rate,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="version != null">
				#{version,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="editTime != null">
				#{editTime,jdbcType=TIMESTAMP},
			</if>
			<if test="payWayCode != null">
				#{payWayCode,jdbcType=VARCHAR},
			</if>
			<if test="payWayName != null">
				#{payWayName,jdbcType=VARCHAR},
			</if>
			<if test="payTypeCode != null">
				#{payTypeCode,jdbcType=VARCHAR},
			</if>
			<if test="payTypeName != null">
				#{payTypeName,jdbcType=VARCHAR},
			</if>
			<if test="payProductCode != null">
				#{payProductCode,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
			<if test="sorts != null">
				#{sorts,jdbcType=INTEGER},
			</if>
			<if test="payRate != null">
				#{payRate,jdbcType=DOUBLE},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="t5750.pay.service.user.entity.RpPayWay">
		update rp_pay_way
		<set>
			<if test="version != null">
				version = #{version,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="editTime != null">
				edit_time = #{editTime,jdbcType=TIMESTAMP},
			</if>
			<if test="payWayCode != null">
				pay_way_code = #{payWayCode,jdbcType=VARCHAR},
			</if>
			<if test="payWayName != null">
				pay_way_name = #{payWayName,jdbcType=VARCHAR},
			</if>
			<if test="payTypeCode != null">
				pay_type_code = #{payTypeCode,jdbcType=VARCHAR},
			</if>
			<if test="payTypeName != null">
				pay_type_name = #{payTypeName,jdbcType=VARCHAR},
			</if>
			<if test="payProductCode != null">
				pay_product_code = #{payProductCode,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR},
			</if>
			<if test="sorts != null">
				sorts = #{sorts,jdbcType=INTEGER},
			</if>
			<if test="payRate != null">
				pay_rate = #{payRate,jdbcType=DOUBLE},
			</if>
		</set>
		where ID = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="t5750.pay.service.user.entity.RpPayWay">
    update rp_pay_way
    set version = #{version,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      pay_way_code = #{payWayCode,jdbcType=VARCHAR},
      pay_way_name = #{payWayName,jdbcType=VARCHAR},
      pay_type_code = #{payTypeCode,jdbcType=VARCHAR},
      pay_type_name = #{payTypeName,jdbcType=VARCHAR},
      pay_product_code = #{payProductCode,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      sorts = #{sorts,jdbcType=INTEGER},
      pay_rate = #{payRate,jdbcType=DOUBLE}
    where ID = #{id,jdbcType=VARCHAR}
  </update>

	<sql id="table_name">  rp_pay_way </sql>

	<!-- 根据搜索条件获取数据 -->
	<sql id="condition_sql">
		<if test="status != null and status != ''">and status = #{status,jdbcType=VARCHAR}</if>
		<if test="payWayName != null and payWayName != ''">and pay_way_name like CONCAT('%'
			,CONCAT(#{payWayName},'%'))
		</if>
		<if test="payTypeCode != null and payTypeCode != ''">and pay_type_code = #{payTypeCode,jdbcType=VARCHAR}</if>
		<if test="payWayCode != null and payWayCode != ''">and pay_way_code = #{payWayCode,jdbcType=VARCHAR}</if>
		<if test="payProductCode != null and payProductCode != ''">and pay_product_code =
			#{payProductCode,jdbcType=VARCHAR}
		</if>
	</sql>

	<select id="listBy" parameterType="java.util.Map" resultMap="BaseResultMap">
		select * from
		<include refid="table_name"/>
		<where>
			<include refid="condition_sql"/>
		</where>
		order by create_time desc
	</select>

	<!-- 分页查询 -->
	<select id="listPage" parameterType="java.util.Map" resultMap="BaseResultMap">
		select * from
		<include refid="table_name"/>
		<where>
			<include refid="condition_sql"/>
		</where>
		order by create_time desc limit #{pageFirst}, #{pageSize}
	</select>

	<!-- 分页查询时要用到的总数统计 -->
	<select id="listPageCount" parameterType="java.util.Map"
			resultType="java.lang.Long">
		select count(1) from
		<include refid="table_name"/>
		<where>
			<include refid="condition_sql"/>
		</where>
	</select>
</mapper>